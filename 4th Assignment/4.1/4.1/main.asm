;
; 4.1.asm
;
; Created: 2/12/2021 6:50:04 μμ
; Author : Πεγειώτη Νάταλη
;
.include "m16def.inc"

.DSEG
_tmp_: .byte 2
.CSEG

.org 0x0 
jmp reset 
.org 0x10 
rjmp ISR_TIMER1_OVF 
.org 0x1c 
rjmp ADC_ISR

reset:	ldi r24, low(RAMEND)				; initialize stack pointer
		out SPL, r24
		ldi r24, high(RAMEND)
		out SPH, r24

		clr r24
		rcall lcd_init_sim					; initialize with clear screen
		call ADC_init						; initialize ADC
		
		ldi r30, 0							; initialize with flag = 0
		ldi r31, 0							; flag to make leds blink in Gas detected state

		ser r24								
		out DDRB, r24						; initialize PORTB for output
		out DDRD, r24						; initialize PORTD that is connected to LCD, as output
		ldi r24, (1 << PC7) | (1 << PC6) | (1 << PC5) | (1 << PC4)	; set as output the 4 MSB
		out DDRC, r24												; of PORTC

		ldi r24, (1 << TOIE1)		; activate overfloat interrupt of TCNT1
		out TIMSK, r24				; timer1
		ldi r24, (1 << CS12) | (0<<CS11) | (1<<CS10)	; CK/1024
		out TCCR1B, r24

init:	rcall lcd_init_sim
		; fcount = 8MHz/1024=7812.5Hz
		; timer: 100ms=0.1sec
		; cc_count = 0.1*7812.5=781.25cc
		; START = 65536-781.25=64754.75 ~ 64755 = 0xFCF3
		ldi r24,0xFC	;initialize TCNT1
		out TCNT1H, r24
		ldi r24, 0xF3
		out TCNT1L, r24
		sei	; activate interrupts

main:	rcall scan_keypad_rising_edge_sim
		rcall keypad_to_ascii_sim			; read 1st digit 
		cpi r24, 0							; repeat until 1st digit is valid
		breq main
		mov r20,r24							; store 1st digit in r20
next:	rcall scan_keypad_rising_edge_sim
		rcall keypad_to_ascii_sim			; read 2nd digit 
		cpi r24, 0							; repeat until 2nd digit is valid
		breq next
		mov r21,r24							; store 2nd digit in r21
		rcall scan_keypad_rising_edge_sim	; we call that for safety reasons

		cpi r20, 52		; if 1st digit != 4
		brne wrong_key
		cpi r21, 49		; or 2nd digit != 1
		brne wrong_key	; wrong_key given, go to wrong_key

correct_key:	cli		; disable interupts
				ldi r30, 0		; flag = 0
				clr r24
				rcall lcd_init_sim
				ldi r24, 'W'
				rcall lcd_data_sim
				ldi r24, 'E'
				rcall lcd_data_sim
				ldi r24, 'L'
				rcall lcd_data_sim
				ldi r24, 'C'
				rcall lcd_data_sim
				ldi r24, 'O'
				rcall lcd_data_sim
				ldi r24, 'M'
				rcall lcd_data_sim
				ldi r24, 'E'
				rcall lcd_data_sim
				ldi r24, ' '
				rcall lcd_data_sim
				ldi r24, '4'
				rcall lcd_data_sim
				ldi r24, '1'
				rcall lcd_data_sim	;display "WELCOME 41"

				ldi r19, (1 << PB7)
				out PORTB, r19		; turn on PB7
				ldi r24, low(4000)
				ldi r25, high(4000)
				rcall wait_msec		; delay 4sec
				ldi r19, (0 << PB7)
				out PORTB, r19		; turn off PB7
				rjmp init			; return to activate overfloat interrupt of TCNT1

wrong_key:	ldi r18, 4			; loop for 4 times
loop:		cpi r18, 0
			breq finish
			in r19, PINB
			ori r19, 128		
			out PORTB, r19		; turn on PB7 
			ldi r24, low(500)
			ldi r25, high(500)
			rcall wait_msec		; delay 0.5sec
			in r19, PINB
			andi r19, 127
			out PORTB, r19		; turn off PB7
			ldi r24, low(500)
			ldi r25, high(500)
			rcall wait_msec		; delay 0.5sec
			dec r18
			rjmp loop

finish:	rjmp main			; return to main

; interupt service routine of timer1
ISR_TIMER1_OVF: cli 
				ldi r24,(1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADSC) ; start transformation now	
				out ADCSRA,r24
				ldi r24,0xFC ;initialize TCNT1 
				out TCNT1H, r24 
				ldi r24, 0xF3 
				out TCNT1L, r24 
				sei
				reti

; interupt service routine (read CO level and acts accordingly)
ADC_ISR:	in r28, ADCL
			in r29, ADCH	; read ADC
			cpi r29, 0
			breq ZERO
			cpi r29, 1
			breq ONE
			cpi r29, 2
			breq TWO
			cpi r29, 3
			breq THREE
		ZERO:	cpi r28, 0x72	
				brlo led_PB0	; ADC <= 114 => Cx <= 35
				cpi r28, 0xcf
				brlo led_PB1	; 114 < ADC <= 207 => 35 < Cx <= 70
		ONE:	cpi r28, 0x2c	
				brlo led_PB2	; 207 < ADC <= 300 => 70 < Cx <= 105
				cpi r28, 0x8a
				brlo led_PB3	; 300 < ADC <= 394 => 105 < Cx <= 140
				cpi r28, 0xe7
				brlo led_PB4	; 394 < ADC <= 487 => 140 < Cx <= 175
		TWO:	cpi r28, 0x44
				brlo led_PB5	; 487 < ADC <= 580 => 175 < Cx <= 210
		THREE:	cpi r28, 0xff
				brlo led_PB6	; 580 < ADC <= 1023 => 210 < Cx <= 1023

	led_PB0:	ldi r17, 0b00000001
				out PORTB, r17	; turn on PB0
				rjmp CLEAR
	led_PB1:	ldi r17, 0b00000011
				out PORTB, r17	; turn on PB0 - PB1
				rjmp CLEAR
	led_PB2:	ldi r17, 0b00000111
				rjmp Gas_on_led
	led_PB3:	ldi r17, 0b00001111
				rjmp Gas_on_led
	led_PB4:	ldi r17, 0b00011111
				rjmp Gas_on_led
	led_PB5:	ldi r17, 0b00111111
				rjmp Gas_on_led
	led_PB6:	ldi r17, 0b01111111
				rjmp Gas_on_led

	Gas_on_led: cpi r31,0		; make leds blink 
				breq turn_on	; if in previous Gas detected state leds were on, turn them off 
				ldi r31,0 
				ldi r17,0 
				rjmp turn_off 
	turn_on:	ldi r31,1 
	turn_off:	out PORTB, r17 ; turn on or off PB0 - PB6 
				rjmp GAS

		CLEAR:	cpi r30, 0			; check if the previous state was GAS LEAK 
				breq already_clean
				ldi r30, 0
				clr r24
				rcall lcd_init_sim
				ldi r24, 'C'
				rcall lcd_data_sim
				ldi r24, 'L'
				rcall lcd_data_sim
				ldi r24, 'E'
				rcall lcd_data_sim
				ldi r24, 'A'
				rcall lcd_data_sim
				ldi r24, 'R'
				rcall lcd_data_sim	;display "CLEAR"
				ldi r24, low(200) 
				ldi r25, high(200) 
				rcall wait_msec ; delay 0.2sec 
				rjmp fin 
already_clean:	rcall lcd_init_sim 
				rjmp fin
		

		GAS:	cpi r30, 1		; if previous state was Gas detected then do nothing
				breq fin
				ldi r30, 1		; set flag = 1 if there is a GAS LEAK
				clr r24
				rcall lcd_init_sim
				ldi r24, 'G'
				rcall lcd_data_sim
				ldi r24, 'A'
				rcall lcd_data_sim
				ldi r24, 'S'
				rcall lcd_data_sim
				ldi r24, ' '
				rcall lcd_data_sim
				ldi r24, 'D'
				rcall lcd_data_sim	
				ldi r24, 'E'
				rcall lcd_data_sim
				ldi r24, 'T'
				rcall lcd_data_sim
				ldi r24, 'E'
				rcall lcd_data_sim
				ldi r24, 'C'
				rcall lcd_data_sim
				ldi r24, 'T'
				rcall lcd_data_sim
				ldi r24, 'E'
				rcall lcd_data_sim
				ldi r24, 'D'
				rcall lcd_data_sim	;display "GAS DETECTED"
				rjmp fin

	fin:		ldi r24,0xFC	;initialize TCNT1
				out TCNT1H, r24
				ldi r24, 0xF3
				out TCNT1L, r24
				sei
				reti


; Routine: usart_init
; Description:
; This routine initializes the
; ADC as shown below.
; ------- INITIALIZATIONS -------
;
; Vref: Vcc (5V for easyAVR6)
; Selected pin is A0
; ADC Interrupts are Enabled
; Prescaler is set as CK/128 = 62.5kHz
; --------------------------------
; parameters: None.
; return value: None.
; registers affected: r24
; routines called: None
ADC_init:	ldi r24,(1<<REFS0) ; Vref: Vcc
			out ADMUX,r24 ;MUX4:0 = 00000 for A0.
			;ADC is Enabled (ADEN=1)
			;ADC Interrupts are Enabled (ADIE=1)
			;Set Prescaler CK/128 = 62.5Khz (ADPS2:0=111)
			ldi r24,(1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)
			out ADCSRA,r24
			ret


//given code for functions to be called
scan_row_sim:	
	out PORTC, r25		; ? ?????????? ?????? ??????? ??? ?????? β€1β€™
	push r24			; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25			; ?????????? ??? ???????????? ??????????????
	ldi r24,low(500)	; ?????????
	ldi r25,high(500)
	rcall wait_usec
	pop r25
	pop r24				; ????? ????? ??????
	nop
	nop					; ??????????? ??? ?? ???????? ?? ????? ? ?????? ??????????
	in r24, PINC		; ??????????? ?? ?????? (??????) ??? ????????? ??? ????? ?????????
	andi r24 ,0x0f		; ????????????? ?? 4 LSB ???? ?? β€1β€™ ???????? ??? ????? ?????????
	ret					; ?? ?????????


scan_keypad_sim:	
	push r26			; ?????????? ???? ??????????? r27:r26 ????? ????
	push r27			; ????????? ???? ???? ???????
	ldi r25 , 0x10		; ?????? ??? ????? ?????? ??? ????????????? (PC4: 1 2 3 A)
	rcall scan_row_sim
	swap r24			; ?????????? ?? ??????????
	mov r27, r24		; ??? 4 msb ??? r27
	ldi r25 ,0x20		; ?????? ?? ??????? ?????? ??? ????????????? (PC5: 4 5 6 B)
	rcall scan_row_sim
	add r27, r24		; ?????????? ?? ?????????? ??? 4 lsb ??? r27
	ldi r25 , 0x40		; ?????? ??? ????? ?????? ??? ????????????? (PC6: 7 8 9 C)
	rcall scan_row_sim
	swap r24			; ?????????? ?? ??????????
	mov r26, r24		; ??? 4 msb ??? r26
	ldi r25 ,0x80		; ?????? ??? ??????? ?????? ??? ????????????? (PC7: * 0 # D)
	rcall scan_row_sim
	add r26, r24		; ?????????? ?? ?????????? ??? 4 lsb ??? r26
	movw r24, r26		; ???????? ?? ?????????? ????? ??????????? r25:r24
	clr r26				; ?????????? ??? ??? ????????????? ????????
	out PORTC,r26		; ?????????? ??? ??? ????????????? ????????
	pop r27				; ????????? ???? ??????????? r27:r26
	pop r26
	ret 


scan_keypad_rising_edge_sim:
	push r22				; ?????????? ???? ??????????? r23:r22 ??? ????
	push r23				; r26:r27 ????? ???? ????????? ???? ???? ???????
	push r26
	push r27	
	rcall scan_keypad_sim	; ?????? ?? ???????????? ??? ?????????? ?????????
	push r24				; ??? ?????????? ?? ??????????
	push r25
	ldi r24 ,15				; ??????????? 15 ms (??????? ????? 10-20 msec ??? ??????????? ??? ???
	ldi r25 ,0				; ???????????? ??? ????????????? β€“ ????????????? ????????????)
	rcall wait_msec
	rcall scan_keypad_sim	; ?????? ?? ???????????? ???? ??? ????????	
	pop r23					; ??? ??????? ?????????? ???????????
	pop r22
	and r24 ,r22
	and r25 ,r23
	ldi r26 ,low(_tmp_)		; ??????? ??? ????????? ??? ????????? ????
	ldi r27 ,high(_tmp_)	; ??????????? ????? ??? ???????? ????? r27:r26
	ld r23 ,X+
	ld r22 ,X	
	st X ,r24				; ?????????? ??? RAM ?? ??? ?????????
	st -X ,r25				; ??? ?????????
	com r23
	com r22					; ???? ???? ????????? ??? ????? Β«?????Β» ???????
	and r24 ,r22
	and r25 ,r23
	pop r27					; ????????? ???? ??????????? r27:r26
	pop r26					; ??? r23:r22
	pop r23
	pop r22
	ret


keypad_to_ascii_sim:
	push r26			; ?????????? ???? ??????????? r27:r26 ????? ????
	push r27			; ????????? ???? ??? ???????
	movw r26 ,r24		; ?????? β€1β€™ ???? ?????? ??? ?????????? r26 ????????
						; ?? ???????? ??????? ??? ????????
	ldi r24 ,'*'		
						; r26
						;C 9 8 7 D # 0 *
	sbrc r26 ,0
	rjmp return_ascii
	ldi r24 ,'0'
	sbrc r26 ,1
	rjmp return_ascii
	ldi r24 ,'#'
	sbrc r26 ,2
	rjmp return_ascii
	ldi r24 ,'D'
	sbrc r26 ,3			; ?? ??? ????? β€1β€™??????????? ??? ret, ?????? (?? ????? β€1β€™)	
	rjmp return_ascii	; ?????????? ?? ??? ?????????? r24 ??? ASCII ???? ??? D.
	ldi r24 ,'7'
	sbrc r26 ,4
	rjmp return_ascii
	ldi r24 ,'8'
	sbrc r26 ,5
	rjmp return_ascii
	ldi r24 ,'9'	
	sbrc r26 ,6
	rjmp return_ascii ;
	ldi r24 ,'C'
	sbrc r26 ,7
	rjmp return_ascii
	ldi r24 ,'4'		; ?????? β€1β€™ ???? ?????? ??? ?????????? r27 ????????
	sbrc r27 ,0			; ?? ???????? ??????? ??? ????????
	rjmp return_ascii
	ldi r24 ,'5'
						;r27
						;? 3 2 1 B 6 5 4
	sbrc r27 ,1
	rjmp return_ascii
	ldi r24 ,'6'
	sbrc r27 ,2
	rjmp return_ascii
	ldi r24 ,'B'
	sbrc r27 ,3
	rjmp return_ascii
	ldi r24 ,'1'
	sbrc r27 ,4
	rjmp return_ascii ;
	ldi r24 ,'2'
	sbrc r27 ,5
	rjmp return_ascii
	ldi r24 ,'3' 
	sbrc r27 ,6
	rjmp return_ascii
	ldi r24 ,'A'
	sbrc r27 ,7
	rjmp return_ascii
	clr r24
	rjmp return_ascii
	
return_ascii:
	pop r27				; ????????? ???? ??????????? r27:r26
	pop r26
	ret 
	

lcd_init_sim:
	push r24				; ?????????? ???? ??????????? r25:r24 ????? ????
	push r25				; ????????? ???? ??? ???????
	
	ldi r24, 40				; ???? ? ???????? ??? lcd ????????????? ??
	ldi r25, 0				; ????? ??????? ??? ???? ??? ????????????.
	rcall wait_msec			; ??????? 40 msec ????? ???? ?? ???????????.
	ldi r24, 0x30			; ?????? ????????? ?? 8 bit mode
	out PORTD, r24			; ?????? ??? ???????? ?? ??????? ???????
	sbi PORTD, PD3			; ??? ?? ?????????? ??????? ??? ???????
	cbi PORTD, PD3			; ??? ??????, ? ?????? ???????????? ??? ?????
	ldi r24, 39
	ldi r25, 0				; ??? ? ???????? ??? ?????? ????????? ?? 8-bit mode
	rcall wait_usec			; ??? ?? ?????? ??????, ???? ?? ? ???????? ???? ??????????
							; ??????? 4 bit ?? ??????? ?? ?????????? 8 bit
	push r24				; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25				; ?????????? ??? ???????????? ??????????????
	ldi r24,low(1000)		; ?????????
	ldi r25,high(1000)
	rcall wait_usec
	pop r25
	pop r24					; ????? ????? ??????
	ldi r24, 0x30
	out PORTD, r24
	sbi PORTD, PD3
	cbi PORTD, PD3
	ldi r24,39
	ldi r25,0
	rcall wait_usec 
	push r24				; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25				; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(1000)		; ?????????
	ldi r25 ,high(1000)
	rcall wait_usec
	pop r25
	pop r24					; ????? ????? ??????
	ldi r24,0x20			; ?????? ?? 4-bit mode
	out PORTD, r24
	sbi PORTD, PD3
	cbi PORTD, PD3
	ldi r24,39
	ldi r25,0
	rcall wait_usec
	push r24				; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25				; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(1000)		; ?????????
	ldi r25 ,high(1000)	
	rcall wait_usec
	pop r25
	pop r24					; ????? ????? ??????
	ldi r24,0x28			; ??????? ?????????? ???????? 5x8 ????????
	rcall lcd_command_sim	; ??? ???????? ??? ??????? ???? ?????
	ldi r24,0x0c			; ???????????? ??? ??????, ???????? ??? ???????
	rcall lcd_command_sim
	ldi r24,0x01			; ?????????? ??? ??????
	rcall lcd_command_sim
	ldi r24, low(1530)
	ldi r25, high(1530)
	rcall wait_usec
	ldi r24 ,0x06			; ???????????? ????????? ??????? ???? 1 ??? ??????????
	rcall lcd_command_sim	; ??? ????? ???????????? ???? ??????? ??????????? ???
							; ?????????????? ??? ????????? ????????? ??? ??????
	pop r25					; ????????? ???? ??????????? r25:r24
	pop r24
	ret
	

lcd_command_sim:
	push r24					; ?????????? ???? ??????????? r25:r24 ????? ????
	push r25					; ????????? ???? ??? ???????
	cbi PORTD, PD2				; ??????? ??? ?????????? ??????? (PD2=0)
	rcall write_2_nibbles_sim	; ???????? ??? ??????? ??? ??????? 39?sec
	ldi r24, 39					; ??? ??? ?????????? ??? ????????? ??? ??? ??? ??????? ??? lcd.
	ldi r25, 0					; ???.: ???????? ??? ???????, ?? clear display ??? return home,
	rcall wait_usec				; ??? ???????? ????????? ?????????? ??????? ????????.	
	pop r25						; ????????? ???? ??????????? r25:r24
	pop r24
	ret 
	

lcd_data_sim:
	push r24					; ?????????? ???? ??????????? r25:r24 ????? ????
	push r25					; ????????? ???? ??? ???????
	sbi PORTD, PD2				; ??????? ??? ?????????? ????????? (PD2=1)
	rcall write_2_nibbles_sim	; ???????? ??? byte
	ldi r24 ,43					; ??????? 43?sec ????? ?? ??????????? ? ????
	ldi r25 ,0					; ??? ????????? ??? ??? ??????? ??? lcd
	rcall wait_usec
	pop r25						;????????? ???? ??????????? r25:r24
	pop r24
	ret
	

write_2_nibbles_sim:
	push r24			; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25			; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(6000)	; ?????????
	ldi r25 ,high(6000)
	rcall wait_usec
	pop r25
	pop r24				; ????? ????? ??????
	push r24			; ??????? ?? 4 MSB
	in r25, PIND		; ??????????? ?? 4 LSB ??? ?? ?????????????	
	andi r25, 0x0f		; ??? ?? ??? ????????? ??? ????? ??????????? ?????????
	andi r24, 0xf0		; ????????????? ?? 4 MSB ???
	add r24, r25		; ???????????? ?? ?? ???????????? 4 LSB
	out PORTD, r24		; ??? ???????? ???? ?????
	sbi PORTD, PD3		; ????????????? ?????? Enable ???? ????????? PD3
	cbi PORTD, PD3		; PD3=1 ??? ???? PD3=0
	push r24			; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25			; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(6000)	; ?????????
	ldi r25 ,high(6000)
	rcall wait_usec
	pop r25
	pop r24				; ????? ????? ??????
	pop r24				; ??????? ?? 4 LSB. ????????? ?? byte.
	swap r24			; ????????????? ?? 4 MSB ?? ?? 4 LSB
	andi r24 ,0xf0		; ??? ?? ??? ????? ???? ?????????????
	add r24, r25
	out PORTD, r24
	sbi PORTD, PD3		; ???? ?????? Enable
	cbi PORTD, PD3
	ret


wait_msec:
	push r24			; 2 ?????? (0.250 ?sec)
	push r25			; 2 ??????
	ldi r24 , low(998)	; ??????? ??? ?????. r25:r24 ?? 998 (1 ?????? - 0.125 ?sec)
	ldi r25 , high(998) ; 1 ?????? (0.125 ?sec)
	rcall wait_usec		; 3 ?????? (0.375 ?sec), ???????? ???????? ??????????? 998.375 ?sec
	pop r25				; 2 ?????? (0.250 ?sec)
	pop r24				; 2 ??????
	sbiw r24 , 1		; 2 ??????
	brne wait_msec		; 1 ? 2 ?????? (0.125 ? 0.250 ?sec)
	ret					; 4 ?????? (0.500 ?sec)

wait_usec:
	sbiw r24 ,1		; 2 ?????? (0.250 ?sec)
	nop				; 1 ?????? (0.125 ?sec)
	nop				; 1 ?????? (0.125 ?sec)
	nop				; 1 ?????? (0.125 ?sec)
	nop				; 1 ?????? (0.125 ?sec)
	brne wait_usec	; 1 ? 2 ?????? (0.125 ? 0.250 ?sec)
	ret				; 4 ?????? (0.500 ?sec)